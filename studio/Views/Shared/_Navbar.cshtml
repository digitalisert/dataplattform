@using System.Collections.Generic
@using System.Linq
@using Digitalisert.Dataplattform.Studio.Models
@model IEnumerable<ResourceModel.Resource>

@{
    string resourceSearch = ViewBag.ResourceSearch ?? "";

    var parameters = Model.Select((resource, i) => new { resource, i }).SelectMany(r =>
        (
            (new[] { r.resource.Context ?? "" }).Where(t => t != "").Select(t => new { Name = "Context", Value = t, Index = r.i } )
        ).Union(
            (r.resource.Type ?? new string[] { }).Select(t => new { Name = "Type", Value = t, Index = r.i } )
        ).Union(
            (r.resource.SubType ?? new string[] { }).Select(t => new { Name = "SubType", Value = t, Index = r.i } )
        ).Union(
            (r.resource.Status?? new string[] { }).Select(t => new { Name = "Status", Value = t, Index = r.i } )
        ).Union(
            (r.resource.Tags ?? new string[] { }).Select(t => new { Name = "Tags", Value = t, Index = r.i } )
        )
    );

    var search = (resourceSearch != "") ? new[] { "search=" + resourceSearch } : new string[] { };
}

<nav class="navbar" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
        <a class="navbar-item" href="/Studio/Resource/">Digitalisert</a>
        <a role="button" class="navbar-burger" data-target="navMenu" aria-label="menu" aria-expanded="false">
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
        </a>
    </div>
    <div class="navbar-menu" id="navMenu">
        <div class="navbar-start">
            @foreach (var facet in (Dictionary<string, Raven.Client.Documents.Queries.Facets.FacetResult>)ViewBag.ResourceFacet)
            {
                var name = (facet.Value.Name == "Properties") ? "Properties[0].Name" : facet.Value.Name;
                <div class="navbar-item has-dropdown is-hoverable">
                    <a class="navbar-link">@facet.Value.Name</a>
                    <div class="navbar-dropdown">
                        @foreach(var valueG in facet.Value.Values.Where(v => v.Range.Contains(":")).GroupBy(v => v.Range.Substring(0, v.Range.IndexOf(":"))))
                        {
                            var gquery = String.Join("&", parameters.Select(p => "resources[" + p.Index + "]." + p.Name + "=" + p.Value).Union(new[] { "resources[0]." + name + "=" + valueG.Key + ":*" } ).Union(search));
                            <div class="navbar-item">
                                <a href="?@gquery">@valueG.Key</a>
                            </div>
                            @foreach (var value in valueG.OrderBy(v => v.Range))
                            {
                                var query = String.Join("&", parameters.Select(p => "resources[" + p.Index + "]." + p.Name + "=" + p.Value).Union(new[] { "resources[0]." + name + "=" + value.Range } ).Union(search));
                                <a class="navbar-item" href="?@query">
                                    @value.Range.Substring(valueG.Key.Length + 1)
                                    <span class="tag is-rounded ml-1">@value.Count</span>
                                </a>
                            }
                            <hr class="navbar-divider">
                        }
                        @foreach(var value in facet.Value.Values.Where(v => !v.Range.Contains(":")).OrderBy(v => v.Range))
                        {
                            var query = String.Join("&", parameters.Select(p => "resources[" + p.Index + "]." + p.Name + "=" + p.Value).Union(new[] { "resources[0]." + name + "=" + value.Range } ).Union(search));
                            <a class="navbar-item" href="?@query">
                                @value.Range
                                <span class="tag is-rounded ml-1">@value.Count</span>
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="navbar-end">
            <div class="navbar-item">
                <form action="/Studio/Resource">
                    @foreach (var parameter in parameters)
                    {
                        <input type="hidden" name="resources[@parameter.Index].@parameter.Name" value="@parameter.Value" />
                    }
                    <div class="field has-addons">
                        <div class="control">
                            <input type="search" class="input" name="search" placeholder="Search..." value="@resourceSearch">
                        </div>
                        <div class="control">
                            <button type="submit" class="button">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</nav>
